{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nvar BASE_URL = __DEV__ ? 'http://localhost:3000/api' : 'https://your-production-api.com/api';\nexport var api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(function (response) {\n  return response;\n}, function () {\n  var _ref = _asyncToGenerator(function* (error) {\n    var _error$response;\n    if (((_error$response = error.response) == null ? void 0 : _error$response.status) === 401) {\n      var AsyncStorage = require('@react-native-async-storage/async-storage').default;\n      yield AsyncStorage.removeItem('auth_token');\n      delete api.defaults.headers.common['Authorization'];\n    }\n    return Promise.reject(error);\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var endpoints = {\n  login: '/auth/login',\n  register: '/auth/register',\n  me: '/auth/me',\n  verify: '/auth/verify',\n  items: '/items',\n  itemDetail: function itemDetail(id) {\n    return `/items/${id}`;\n  },\n  categories: '/items/categories/list',\n  claims: '/claims',\n  claimDetail: function claimDetail(id) {\n    return `/claims/${id}`;\n  },\n  claimStatus: function claimStatus(id) {\n    return `/claims/${id}/status`;\n  },\n  claimStatistics: '/claims/admin/statistics',\n  conversations: '/messages/conversations',\n  conversation: function conversation(id) {\n    return `/messages/conversation/${id}`;\n  },\n  messages: '/messages',\n  markConversationRead: function markConversationRead(id) {\n    return `/messages/conversation/${id}/read`;\n  },\n  unreadCount: '/messages/unread-count',\n  profile: '/profile',\n  profileStatistics: '/profile/statistics',\n  profileItems: '/profile/items',\n  profileClaims: '/profile/claims',\n  profileNotifications: '/profile/notifications',\n  markNotificationRead: function markNotificationRead(id) {\n    return `/profile/notifications/${id}/read`;\n  },\n  markAllNotificationsRead: '/profile/notifications/read-all',\n  unreadNotificationCount: '/profile/notifications/unread-count',\n  adminDashboard: '/admin/dashboard',\n  adminUsers: '/admin/users',\n  adminItems: '/admin/items',\n  adminNotifications: '/admin/notifications',\n  updateUserRole: function updateUserRole(id) {\n    return `/admin/users/${id}/role`;\n  },\n  updateItemStatus: function updateItemStatus(id) {\n    return `/admin/items/${id}/status`;\n  },\n  deleteItem: function deleteItem(id) {\n    return `/admin/items/${id}`;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","__DEV__","api","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","_ref","_asyncToGenerator","_error$response","status","AsyncStorage","require","default","removeItem","defaults","common","_x","apply","arguments","endpoints","login","register","me","verify","items","itemDetail","id","categories","claims","claimDetail","claimStatus","claimStatistics","conversations","conversation","messages","markConversationRead","unreadCount","profile","profileStatistics","profileItems","profileClaims","profileNotifications","markNotificationRead","markAllNotificationsRead","unreadNotificationCount","adminDashboard","adminUsers","adminItems","adminNotifications","updateUserRole","updateItemStatus","deleteItem"],"sources":["C:/Users/Asus/Desktop/Programming/ClaimIT/ClaimIT/mobile/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Configure base URL - update this for production\r\nconst BASE_URL = __DEV__ \r\n  ? 'http://localhost:3000/api' \r\n  : 'https://your-production-api.com/api';\r\n\r\nexport const api = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Token will be added by AuthContext\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      const AsyncStorage = require('@react-native-async-storage/async-storage').default;\r\n      await AsyncStorage.removeItem('auth_token');\r\n      delete api.defaults.headers.common['Authorization'];\r\n      \r\n      // You might want to redirect to login screen here\r\n      // This would require navigation context\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API endpoints\r\nexport const endpoints = {\r\n  // Auth\r\n  login: '/auth/login',\r\n  register: '/auth/register',\r\n  me: '/auth/me',\r\n  verify: '/auth/verify',\r\n  \r\n  // Items\r\n  items: '/items',\r\n  itemDetail: (id: string) => `/items/${id}`,\r\n  categories: '/items/categories/list',\r\n  \r\n  // Claims\r\n  claims: '/claims',\r\n  claimDetail: (id: string) => `/claims/${id}`,\r\n  claimStatus: (id: string) => `/claims/${id}/status`,\r\n  claimStatistics: '/claims/admin/statistics',\r\n  \r\n  // Messages\r\n  conversations: '/messages/conversations',\r\n  conversation: (id: string) => `/messages/conversation/${id}`,\r\n  messages: '/messages',\r\n  markConversationRead: (id: string) => `/messages/conversation/${id}/read`,\r\n  unreadCount: '/messages/unread-count',\r\n  \r\n  // Profile\r\n  profile: '/profile',\r\n  profileStatistics: '/profile/statistics',\r\n  profileItems: '/profile/items',\r\n  profileClaims: '/profile/claims',\r\n  profileNotifications: '/profile/notifications',\r\n  markNotificationRead: (id: string) => `/profile/notifications/${id}/read`,\r\n  markAllNotificationsRead: '/profile/notifications/read-all',\r\n  unreadNotificationCount: '/profile/notifications/unread-count',\r\n  \r\n  // Admin\r\n  adminDashboard: '/admin/dashboard',\r\n  adminUsers: '/admin/users',\r\n  adminItems: '/admin/items',\r\n  adminNotifications: '/admin/notifications',\r\n  updateUserRole: (id: string) => `/admin/users/${id}/role`,\r\n  updateItemStatus: (id: string) => `/admin/items/${id}/status`,\r\n  deleteItem: (id: string) => `/admin/items/${id}`,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}