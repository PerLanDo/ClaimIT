{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nvar BASE_URL = __DEV__ ? \"http://localhost:3000/api\" : \"https://your-production-api.com/api\";\nexport var api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napi.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(function (response) {\n  return response;\n}, function () {\n  var _ref = _asyncToGenerator(function* (error) {\n    var _error$response;\n    if (((_error$response = error.response) == null ? void 0 : _error$response.status) === 401) {\n      var AsyncStorage = require(\"@react-native-async-storage/async-storage\").default;\n      yield AsyncStorage.removeItem(\"auth_token\");\n      delete api.defaults.headers.common[\"Authorization\"];\n    }\n    return Promise.reject(error);\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var endpoints = {\n  login: \"/auth/login\",\n  register: \"/auth/register\",\n  me: \"/auth/me\",\n  verify: \"/auth/verify\",\n  items: \"/items\",\n  itemDetail: function itemDetail(id) {\n    return `/items/${id}`;\n  },\n  categories: \"/items/categories/list\",\n  claims: \"/claims\",\n  claimDetail: function claimDetail(id) {\n    return `/claims/${id}`;\n  },\n  claimStatus: function claimStatus(id) {\n    return `/claims/${id}/status`;\n  },\n  claimStatistics: \"/claims/admin/statistics\",\n  conversations: \"/messages/conversations\",\n  conversation: function conversation(id) {\n    return `/messages/conversation/${id}`;\n  },\n  messages: \"/messages\",\n  markConversationRead: function markConversationRead(id) {\n    return `/messages/conversation/${id}/read`;\n  },\n  unreadCount: \"/messages/unread-count\",\n  profile: \"/profile\",\n  profileStatistics: \"/profile/statistics\",\n  profileItems: \"/profile/items\",\n  profileClaims: \"/profile/claims\",\n  profileNotifications: \"/profile/notifications\",\n  markNotificationRead: function markNotificationRead(id) {\n    return `/profile/notifications/${id}/read`;\n  },\n  markAllNotificationsRead: \"/profile/notifications/read-all\",\n  unreadNotificationCount: \"/profile/notifications/unread-count\",\n  adminDashboard: \"/admin/dashboard\",\n  adminUsers: \"/admin/users\",\n  adminItems: \"/admin/items\",\n  adminNotifications: \"/admin/notifications\",\n  updateUserRole: function updateUserRole(id) {\n    return `/admin/users/${id}/role`;\n  },\n  updateItemStatus: function updateItemStatus(id) {\n    return `/admin/items/${id}/status`;\n  },\n  deleteItem: function deleteItem(id) {\n    return `/admin/items/${id}`;\n  }\n};\nexport var createFormData = function createFormData(data, files) {\n  var formData = new FormData();\n  Object.keys(data).forEach(function (key) {\n    if (data[key] !== null && data[key] !== undefined) {\n      formData.append(key, data[key]);\n    }\n  });\n  if (files && files.length > 0) {\n    files.forEach(function (file, index) {\n      formData.append(file.name, {\n        uri: file.uri,\n        type: file.type,\n        name: `image_${index}_${Date.now()}.jpg`\n      });\n    });\n  }\n  return formData;\n};\nexport var uploadItem = function () {\n  var _ref2 = _asyncToGenerator(function* (itemData, images) {\n    var formData = createFormData(itemData, images == null ? void 0 : images.map(function (image, index) {\n      return {\n        name: \"images\",\n        uri: image.uri,\n        type: image.type\n      };\n    }));\n    return api.post(endpoints.items, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n  });\n  return function uploadItem(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var updateItem = function () {\n  var _ref3 = _asyncToGenerator(function* (itemId, itemData, images) {\n    var formData = createFormData(itemData, images == null ? void 0 : images.map(function (image, index) {\n      return {\n        name: \"images\",\n        uri: image.uri,\n        type: image.type\n      };\n    }));\n    return api.put(endpoints.itemDetail(itemId), formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n  });\n  return function updateItem(_x4, _x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var uploadClaim = function () {\n  var _ref4 = _asyncToGenerator(function* (claimData, proofImage) {\n    var formData = createFormData(claimData, proofImage ? [{\n      name: \"proofImage\",\n      uri: proofImage.uri,\n      type: proofImage.type\n    }] : undefined);\n    return api.post(endpoints.claims, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n  });\n  return function uploadClaim(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","BASE_URL","__DEV__","api","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","_ref","_asyncToGenerator","_error$response","status","AsyncStorage","require","default","removeItem","defaults","common","_x","apply","arguments","endpoints","login","register","me","verify","items","itemDetail","id","categories","claims","claimDetail","claimStatus","claimStatistics","conversations","conversation","messages","markConversationRead","unreadCount","profile","profileStatistics","profileItems","profileClaims","profileNotifications","markNotificationRead","markAllNotificationsRead","unreadNotificationCount","adminDashboard","adminUsers","adminItems","adminNotifications","updateUserRole","updateItemStatus","deleteItem","createFormData","data","files","formData","FormData","Object","keys","forEach","key","undefined","append","length","file","index","name","uri","type","Date","now","uploadItem","_ref2","itemData","images","map","image","post","_x2","_x3","updateItem","_ref3","itemId","put","_x4","_x5","_x6","uploadClaim","_ref4","claimData","proofImage","_x7","_x8"],"sources":["C:/Users/Asus/Desktop/Programming/ClaimIT/ClaimIT/mobile/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Configure base URL - update this for production\r\nconst BASE_URL = __DEV__\r\n  ? \"http://localhost:3000/api\"\r\n  : \"https://your-production-api.com/api\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Token will be added by AuthContext\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      const AsyncStorage =\r\n        require(\"@react-native-async-storage/async-storage\").default;\r\n      await AsyncStorage.removeItem(\"auth_token\");\r\n      delete api.defaults.headers.common[\"Authorization\"];\r\n\r\n      // You might want to redirect to login screen here\r\n      // This would require navigation context\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API endpoints\r\nexport const endpoints = {\r\n  // Auth\r\n  login: \"/auth/login\",\r\n  register: \"/auth/register\",\r\n  me: \"/auth/me\",\r\n  verify: \"/auth/verify\",\r\n\r\n  // Items\r\n  items: \"/items\",\r\n  itemDetail: (id: string) => `/items/${id}`,\r\n  categories: \"/items/categories/list\",\r\n\r\n  // Claims\r\n  claims: \"/claims\",\r\n  claimDetail: (id: string) => `/claims/${id}`,\r\n  claimStatus: (id: string) => `/claims/${id}/status`,\r\n  claimStatistics: \"/claims/admin/statistics\",\r\n\r\n  // Messages\r\n  conversations: \"/messages/conversations\",\r\n  conversation: (id: string) => `/messages/conversation/${id}`,\r\n  messages: \"/messages\",\r\n  markConversationRead: (id: string) => `/messages/conversation/${id}/read`,\r\n  unreadCount: \"/messages/unread-count\",\r\n\r\n  // Profile\r\n  profile: \"/profile\",\r\n  profileStatistics: \"/profile/statistics\",\r\n  profileItems: \"/profile/items\",\r\n  profileClaims: \"/profile/claims\",\r\n  profileNotifications: \"/profile/notifications\",\r\n  markNotificationRead: (id: string) => `/profile/notifications/${id}/read`,\r\n  markAllNotificationsRead: \"/profile/notifications/read-all\",\r\n  unreadNotificationCount: \"/profile/notifications/unread-count\",\r\n\r\n  // Admin\r\n  adminDashboard: \"/admin/dashboard\",\r\n  adminUsers: \"/admin/users\",\r\n  adminItems: \"/admin/items\",\r\n  adminNotifications: \"/admin/notifications\",\r\n  updateUserRole: (id: string) => `/admin/users/${id}/role`,\r\n  updateItemStatus: (id: string) => `/admin/items/${id}/status`,\r\n  deleteItem: (id: string) => `/admin/items/${id}`,\r\n};\r\n\r\n// Helper function to create FormData for file uploads\r\nexport const createFormData = (\r\n  data: any,\r\n  files?: { name: string; uri: string; type: string }[]\r\n) => {\r\n  const formData = new FormData();\r\n\r\n  // Add regular data fields\r\n  Object.keys(data).forEach((key) => {\r\n    if (data[key] !== null && data[key] !== undefined) {\r\n      formData.append(key, data[key]);\r\n    }\r\n  });\r\n\r\n  // Add files\r\n  if (files && files.length > 0) {\r\n    files.forEach((file, index) => {\r\n      formData.append(file.name, {\r\n        uri: file.uri,\r\n        type: file.type,\r\n        name: `image_${index}_${Date.now()}.jpg`,\r\n      } as any);\r\n    });\r\n  }\r\n\r\n  return formData;\r\n};\r\n\r\n// Helper function for uploading items with images\r\nexport const uploadItem = async (\r\n  itemData: any,\r\n  images?: { uri: string; type: string }[]\r\n) => {\r\n  const formData = createFormData(\r\n    itemData,\r\n    images?.map((image, index) => ({\r\n      name: \"images\",\r\n      uri: image.uri,\r\n      type: image.type,\r\n    }))\r\n  );\r\n\r\n  return api.post(endpoints.items, formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n\r\n// Helper function for updating items with images\r\nexport const updateItem = async (\r\n  itemId: string,\r\n  itemData: any,\r\n  images?: { uri: string; type: string }[]\r\n) => {\r\n  const formData = createFormData(\r\n    itemData,\r\n    images?.map((image, index) => ({\r\n      name: \"images\",\r\n      uri: image.uri,\r\n      type: image.type,\r\n    }))\r\n  );\r\n\r\n  return api.put(endpoints.itemDetail(itemId), formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n\r\n// Helper function for uploading claims with proof images\r\nexport const uploadClaim = async (\r\n  claimData: any,\r\n  proofImage?: { uri: string; type: string }\r\n) => {\r\n  const formData = createFormData(\r\n    claimData,\r\n    proofImage\r\n      ? [\r\n          {\r\n            name: \"proofImage\",\r\n            uri: proofImage.uri,\r\n            type: proofImage.type,\r\n          },\r\n        ]\r\n      : undefined\r\n  );\r\n\r\n  return api.post(endpoints.claims, formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}