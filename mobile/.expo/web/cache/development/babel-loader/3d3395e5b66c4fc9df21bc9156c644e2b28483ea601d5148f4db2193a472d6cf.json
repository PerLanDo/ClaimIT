{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { TextInput, Button, Card, RadioButton, ActivityIndicator, Snackbar } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from \"../../context/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useAuth = useAuth(),\n    login = _useAuth.login,\n    register = _useAuth.register;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState('student'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    role = _useState4[0],\n    setRole = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isRegistering = _useState6[0],\n    setIsRegistering = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    fullName = _useState8[0],\n    setFullName = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    studentId = _useState0[0],\n    setStudentId = _useState0[1];\n  var _useState1 = useState(''),\n    _useState10 = _slicedToArray(_useState1, 2),\n    department = _useState10[0],\n    setDepartment = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    loading = _useState12[0],\n    setLoading = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    error = _useState14[0],\n    setError = _useState14[1];\n  var roles = [{\n    value: 'student',\n    label: 'Student'\n  }, {\n    value: 'staff',\n    label: 'Staff'\n  }, {\n    value: 'teacher',\n    label: 'Teacher'\n  }, {\n    value: 'admin',\n    label: 'Admin'\n  }];\n  var validateEmail = function validateEmail(email) {\n    var universityDomains = ['.edu', '.ac.', 'university.', 'college.'];\n    return universityDomains.some(function (domain) {\n      return email.toLowerCase().includes(domain);\n    });\n  };\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!email.trim()) {\n        setError('Please enter your university email');\n        return;\n      }\n      if (!validateEmail(email)) {\n        setError('Only valid university email addresses are allowed');\n        return;\n      }\n      if (isRegistering && !fullName.trim()) {\n        setError('Please enter your full name');\n        return;\n      }\n      setLoading(true);\n      setError('');\n      try {\n        if (isRegistering) {\n          yield register(email, role, fullName, studentId || undefined, department || undefined);\n        } else {\n          yield login(email, role);\n        }\n      } catch (error) {\n        setError(error.message || 'Authentication failed');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var toggleMode = function toggleMode() {\n    setIsRegistering(!isRegistering);\n    setError('');\n    setFullName('');\n    setStudentId('');\n    setDepartment('');\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n      style: styles.keyboardView,\n      children: [_jsxs(ScrollView, {\n        contentContainerStyle: styles.scrollContent,\n        showsVerticalScrollIndicator: false,\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.logo,\n            children: \"CLAIMIT\"\n          }), _jsx(Text, {\n            style: styles.subtitle,\n            children: \"Campus Lost & Found\"\n          })]\n        }), _jsx(Card, {\n          style: styles.roleCard,\n          children: _jsxs(Card.Content, {\n            children: [_jsx(Text, {\n              style: styles.roleTitle,\n              children: \"Select Your Role\"\n            }), _jsx(View, {\n              style: styles.roleContainer,\n              children: roles.map(function (roleOption) {\n                return _jsxs(View, {\n                  style: styles.roleItem,\n                  children: [_jsx(RadioButton, {\n                    value: roleOption.value,\n                    status: role === roleOption.value ? 'checked' : 'unchecked',\n                    onPress: function onPress() {\n                      return setRole(roleOption.value);\n                    },\n                    color: \"#8B1538\"\n                  }), _jsx(Text, {\n                    style: styles.roleLabel,\n                    children: roleOption.label\n                  })]\n                }, roleOption.value);\n              })\n            })]\n          })\n        }), _jsx(Card, {\n          style: styles.formCard,\n          children: _jsxs(Card.Content, {\n            children: [_jsx(Text, {\n              style: styles.loginTitle,\n              children: isRegistering ? 'Create Account' : 'Login with your University Email'\n            }), isRegistering && _jsx(TextInput, {\n              label: \"Full Name\",\n              value: fullName,\n              onChangeText: setFullName,\n              style: styles.input,\n              mode: \"outlined\",\n              theme: {\n                colors: {\n                  primary: '#8B1538'\n                }\n              }\n            }), _jsx(TextInput, {\n              label: \"University Email\",\n              value: email,\n              onChangeText: setEmail,\n              style: styles.input,\n              mode: \"outlined\",\n              keyboardType: \"email-address\",\n              autoCapitalize: \"none\",\n              placeholder: \"university.email@your.edu\",\n              theme: {\n                colors: {\n                  primary: '#8B1538'\n                }\n              }\n            }), isRegistering && _jsxs(_Fragment, {\n              children: [_jsx(TextInput, {\n                label: \"Student/Staff ID (Optional)\",\n                value: studentId,\n                onChangeText: setStudentId,\n                style: styles.input,\n                mode: \"outlined\",\n                theme: {\n                  colors: {\n                    primary: '#8B1538'\n                  }\n                }\n              }), _jsx(TextInput, {\n                label: \"Department (Optional)\",\n                value: department,\n                onChangeText: setDepartment,\n                style: styles.input,\n                mode: \"outlined\",\n                theme: {\n                  colors: {\n                    primary: '#8B1538'\n                  }\n                }\n              })]\n            }), _jsx(Text, {\n              style: styles.emailNote,\n              children: \"Only valid university emails allowed\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: handleSubmit,\n              style: styles.loginButton,\n              contentStyle: styles.loginButtonContent,\n              disabled: loading,\n              buttonColor: \"#8B1538\",\n              children: loading ? _jsx(ActivityIndicator, {\n                color: \"white\"\n              }) : isRegistering ? 'REGISTER' : 'LOGIN'\n            }), _jsx(Button, {\n              mode: \"text\",\n              onPress: toggleMode,\n              style: styles.toggleButton,\n              textColor: \"#8B1538\",\n              children: isRegistering ? 'Already have an account? Login' : 'First time? Create Account'\n            })]\n          })\n        })]\n      }), _jsx(Snackbar, {\n        visible: !!error,\n        onDismiss: function onDismiss() {\n          return setError('');\n        },\n        duration: 4000,\n        style: styles.snackbar,\n        children: error\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5'\n  },\n  keyboardView: {\n    flex: 1\n  },\n  scrollContent: {\n    flexGrow: 1,\n    padding: 20,\n    justifyContent: 'center'\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 40\n  },\n  logo: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#8B1538',\n    marginBottom: 8\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#424242'\n  },\n  roleCard: {\n    marginBottom: 20,\n    backgroundColor: 'white'\n  },\n  roleTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#424242',\n    marginBottom: 16\n  },\n  roleContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  roleItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    minWidth: '45%'\n  },\n  roleLabel: {\n    fontSize: 16,\n    color: '#424242',\n    marginLeft: 8\n  },\n  formCard: {\n    backgroundColor: 'white'\n  },\n  loginTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#424242',\n    textAlign: 'center',\n    marginBottom: 24\n  },\n  input: {\n    marginBottom: 16\n  },\n  emailNote: {\n    fontSize: 12,\n    color: '#757575',\n    textAlign: 'center',\n    marginBottom: 24\n  },\n  loginButton: {\n    marginBottom: 16\n  },\n  loginButtonContent: {\n    paddingVertical: 8\n  },\n  toggleButton: {\n    marginTop: 8\n  },\n  snackbar: {\n    backgroundColor: '#F44336'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ScrollView","KeyboardAvoidingView","Platform","TextInput","Button","Card","RadioButton","ActivityIndicator","Snackbar","SafeAreaView","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LoginScreen","_useAuth","login","register","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","role","setRole","_useState5","_useState6","isRegistering","setIsRegistering","_useState7","_useState8","fullName","setFullName","_useState9","_useState0","studentId","setStudentId","_useState1","_useState10","department","setDepartment","_useState11","_useState12","loading","setLoading","_useState13","_useState14","error","setError","roles","value","label","validateEmail","universityDomains","some","domain","toLowerCase","includes","handleSubmit","_ref","_asyncToGenerator","trim","undefined","message","apply","arguments","toggleMode","style","styles","container","children","behavior","OS","keyboardView","contentContainerStyle","scrollContent","showsVerticalScrollIndicator","header","logo","subtitle","roleCard","Content","roleTitle","roleContainer","map","roleOption","roleItem","status","onPress","color","roleLabel","formCard","loginTitle","onChangeText","input","mode","theme","colors","primary","keyboardType","autoCapitalize","placeholder","emailNote","loginButton","contentStyle","loginButtonContent","disabled","buttonColor","toggleButton","textColor","visible","onDismiss","duration","snackbar","create","flex","backgroundColor","flexGrow","padding","justifyContent","alignItems","marginBottom","fontSize","fontWeight","flexDirection","flexWrap","minWidth","marginLeft","textAlign","paddingVertical","marginTop"],"sources":["C:/Users/Asus/Desktop/Programming/ClaimIT/ClaimIT/mobile/src/screens/auth/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  Alert,\r\n} from 'react-native';\r\nimport {\r\n  TextInput,\r\n  Button,\r\n  Card,\r\n  RadioButton,\r\n  ActivityIndicator,\r\n  Snackbar,\r\n} from 'react-native-paper';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst LoginScreen: React.FC = () => {\r\n  const { login, register } = useAuth();\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState<'student' | 'staff' | 'teacher' | 'admin'>('student');\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [fullName, setFullName] = useState('');\r\n  const [studentId, setStudentId] = useState('');\r\n  const [department, setDepartment] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const roles = [\r\n    { value: 'student', label: 'Student' },\r\n    { value: 'staff', label: 'Staff' },\r\n    { value: 'teacher', label: 'Teacher' },\r\n    { value: 'admin', label: 'Admin' },\r\n  ] as const;\r\n\r\n  const validateEmail = (email: string): boolean => {\r\n    const universityDomains = ['.edu', '.ac.', 'university.', 'college.'];\r\n    return universityDomains.some(domain => \r\n      email.toLowerCase().includes(domain)\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!email.trim()) {\r\n      setError('Please enter your university email');\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setError('Only valid university email addresses are allowed');\r\n      return;\r\n    }\r\n\r\n    if (isRegistering && !fullName.trim()) {\r\n      setError('Please enter your full name');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      if (isRegistering) {\r\n        await register(email, role, fullName, studentId || undefined, department || undefined);\r\n      } else {\r\n        await login(email, role);\r\n      }\r\n    } catch (error: any) {\r\n      setError(error.message || 'Authentication failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    setIsRegistering(!isRegistering);\r\n    setError('');\r\n    setFullName('');\r\n    setStudentId('');\r\n    setDepartment('');\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={styles.keyboardView}\r\n      >\r\n        <ScrollView\r\n          contentContainerStyle={styles.scrollContent}\r\n          showsVerticalScrollIndicator={false}\r\n        >\r\n          {/* Header */}\r\n          <View style={styles.header}>\r\n            <Text style={styles.logo}>CLAIMIT</Text>\r\n            <Text style={styles.subtitle}>Campus Lost & Found</Text>\r\n          </View>\r\n\r\n          {/* Role Selection */}\r\n          <Card style={styles.roleCard}>\r\n            <Card.Content>\r\n              <Text style={styles.roleTitle}>Select Your Role</Text>\r\n              <View style={styles.roleContainer}>\r\n                {roles.map((roleOption) => (\r\n                  <View key={roleOption.value} style={styles.roleItem}>\r\n                    <RadioButton\r\n                      value={roleOption.value}\r\n                      status={role === roleOption.value ? 'checked' : 'unchecked'}\r\n                      onPress={() => setRole(roleOption.value)}\r\n                      color=\"#8B1538\"\r\n                    />\r\n                    <Text style={styles.roleLabel}>{roleOption.label}</Text>\r\n                  </View>\r\n                ))}\r\n              </View>\r\n            </Card.Content>\r\n          </Card>\r\n\r\n          {/* Login Form */}\r\n          <Card style={styles.formCard}>\r\n            <Card.Content>\r\n              <Text style={styles.loginTitle}>\r\n                {isRegistering ? 'Create Account' : 'Login with your University Email'}\r\n              </Text>\r\n\r\n              {isRegistering && (\r\n                <TextInput\r\n                  label=\"Full Name\"\r\n                  value={fullName}\r\n                  onChangeText={setFullName}\r\n                  style={styles.input}\r\n                  mode=\"outlined\"\r\n                  theme={{ colors: { primary: '#8B1538' } }}\r\n                />\r\n              )}\r\n\r\n              <TextInput\r\n                label=\"University Email\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n                style={styles.input}\r\n                mode=\"outlined\"\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                placeholder=\"university.email@your.edu\"\r\n                theme={{ colors: { primary: '#8B1538' } }}\r\n              />\r\n\r\n              {isRegistering && (\r\n                <>\r\n                  <TextInput\r\n                    label=\"Student/Staff ID (Optional)\"\r\n                    value={studentId}\r\n                    onChangeText={setStudentId}\r\n                    style={styles.input}\r\n                    mode=\"outlined\"\r\n                    theme={{ colors: { primary: '#8B1538' } }}\r\n                  />\r\n\r\n                  <TextInput\r\n                    label=\"Department (Optional)\"\r\n                    value={department}\r\n                    onChangeText={setDepartment}\r\n                    style={styles.input}\r\n                    mode=\"outlined\"\r\n                    theme={{ colors: { primary: '#8B1538' } }}\r\n                  />\r\n                </>\r\n              )}\r\n\r\n              <Text style={styles.emailNote}>\r\n                Only valid university emails allowed\r\n              </Text>\r\n\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={handleSubmit}\r\n                style={styles.loginButton}\r\n                contentStyle={styles.loginButtonContent}\r\n                disabled={loading}\r\n                buttonColor=\"#8B1538\"\r\n              >\r\n                {loading ? (\r\n                  <ActivityIndicator color=\"white\" />\r\n                ) : (\r\n                  isRegistering ? 'REGISTER' : 'LOGIN'\r\n                )}\r\n              </Button>\r\n\r\n              <Button\r\n                mode=\"text\"\r\n                onPress={toggleMode}\r\n                style={styles.toggleButton}\r\n                textColor=\"#8B1538\"\r\n              >\r\n                {isRegistering \r\n                  ? 'Already have an account? Login' \r\n                  : 'First time? Create Account'\r\n                }\r\n              </Button>\r\n            </Card.Content>\r\n          </Card>\r\n        </ScrollView>\r\n\r\n        <Snackbar\r\n          visible={!!error}\r\n          onDismiss={() => setError('')}\r\n          duration={4000}\r\n          style={styles.snackbar}\r\n        >\r\n          {error}\r\n        </Snackbar>\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  keyboardView: {\r\n    flex: 1,\r\n  },\r\n  scrollContent: {\r\n    flexGrow: 1,\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  logo: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#8B1538',\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#424242',\r\n  },\r\n  roleCard: {\r\n    marginBottom: 20,\r\n    backgroundColor: 'white',\r\n  },\r\n  roleTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#424242',\r\n    marginBottom: 16,\r\n  },\r\n  roleContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n  },\r\n  roleItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 12,\r\n    minWidth: '45%',\r\n  },\r\n  roleLabel: {\r\n    fontSize: 16,\r\n    color: '#424242',\r\n    marginLeft: 8,\r\n  },\r\n  formCard: {\r\n    backgroundColor: 'white',\r\n  },\r\n  loginTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#424242',\r\n    textAlign: 'center',\r\n    marginBottom: 24,\r\n  },\r\n  input: {\r\n    marginBottom: 16,\r\n  },\r\n  emailNote: {\r\n    fontSize: 12,\r\n    color: '#757575',\r\n    textAlign: 'center',\r\n    marginBottom: 24,\r\n  },\r\n  loginButton: {\r\n    marginBottom: 16,\r\n  },\r\n  loginButtonContent: {\r\n    paddingVertical: 8,\r\n  },\r\n  toggleButton: {\r\n    marginTop: 8,\r\n  },\r\n  snackbar: {\r\n    backgroundColor: '#F44336',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}